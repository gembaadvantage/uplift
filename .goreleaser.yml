before:
  hooks:
    - ./scripts/completions.sh
    - ./scripts/manpages.sh

builds:
  - id: uplift
    main: ./cmd/uplift
    binary: uplift
    ldflags:
      - -s -w
      - -X github.com/gembaadvantage/uplift/internal/version.version={{.Tag}}
      - -X github.com/gembaadvantage/uplift/internal/version.gitCommit={{.Commit}}
      - -X github.com/gembaadvantage/uplift/internal/version.gitBranch=main
      - -X github.com/gembaadvantage/uplift/internal/version.buildDate={{.Date}}
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - "386"
      - arm
      - arm64
      - ppc64le
    goarm:
      - "7"
    ignore:
      - goos: darwin
        goarch: "386"

archives:
  - id: uplift-archive
    format: tar.gz
    name_template: |-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    builds:
      - uplift
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - completions/*
      - manpages/*

checksum:
  name_template: "checksums.txt"

changelog:
  sort: desc
  use: github
  filters:
    exclude:
      - "^test"
      - "^chore"
      - "^ci"
  groups:
    - title: "Dependency Updates"
      regexp: "^.*feat\\(deps\\)*:+.*$"
      order: 30
    - title: "New Features"
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 10
    - title: "Bug Fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 20
    - title: "Documentation Updates"
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 40
    - title: "Other Work"
      order: 99

sboms:
  - artifacts: archive

signs:
  - cmd: cosign
    certificate: "${artifact}.pem"
    output: true
    artifacts: checksum
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - --yes

docker_signs:
  - cmd: cosign
    artifacts: manifests
    output: true
    args:
      - "sign"
      - "${artifact}@${digest}"
      - --yes

dockers:
  - image_templates:
      - "gembaadvantage/uplift:{{ .Tag }}-amd64"
      - "ghcr.io/gembaadvantage/uplift:{{ .Tag }}-amd64"
    goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.licenses=MIT"
      - "--label=org.opencontainers.image.description=Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/amd64"
  - image_templates:
      - "gembaadvantage/uplift:{{ .Tag }}-arm64"
      - "ghcr.io/gembaadvantage/uplift:{{ .Tag }}-arm64"
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--label=org.opencontainers.image.licenses=MIT"
      - "--label=org.opencontainers.image.description=Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--platform=linux/arm64"

docker_manifests:
  - name_template: "gembaadvantage/uplift:{{ .Tag }}"
    image_templates:
      - "gembaadvantage/uplift:{{ .Tag }}-amd64"
      - "gembaadvantage/uplift:{{ .Tag }}-arm64"
  - name_template: "gembaadvantage/uplift:latest"
    image_templates:
      - "gembaadvantage/uplift:{{ .Tag }}-amd64"
      - "gembaadvantage/uplift:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/gembaadvantage/uplift:{{ .Tag }}"
    image_templates:
      - "ghcr.io/gembaadvantage/uplift:{{ .Tag }}-amd64"
      - "ghcr.io/gembaadvantage/uplift:{{ .Tag }}-arm64"
  - name_template: "ghcr.io/gembaadvantage/uplift:latest"
    image_templates:
      - "ghcr.io/gembaadvantage/uplift:{{ .Tag }}-amd64"
      - "ghcr.io/gembaadvantage/uplift:{{ .Tag }}-arm64"

brews:
  - name: uplift
    repository:
      owner: gembaadvantage
      name: homebrew-tap
    directory: Formula
    homepage: "https://upliftci.dev"
    description: "Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
    license: MIT
    install: |
      bin.install "uplift"

      bash_output = Utils.safe_popen_read(bin/"uplift", "completion", "bash")
      (bash_completion/"uplift").write bash_output

      zsh_output = Utils.safe_popen_read(bin/"uplift", "completion", "zsh")
      (zsh_completion/"_uplift").write zsh_output

      fish_output = Utils.safe_popen_read(bin/"uplift", "completion", "fish")
      (fish_completion/"uplift.fish").write fish_output

      man1.install "manpages/uplift.1.gz"
    test: |
      installed_version = shell_output("#{bin}/uplift version --short 2>&1")
      assert_match "v#{version}", installed_version
    dependencies:
      - name: git

scoops:
  - repository:
      owner: gembaadvantage
      name: scoops
    homepage: "https://upliftci.dev"
    description: "Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
    license: MIT

nfpms:
  - file_name_template: "{{ .ConventionalFileName }}"
    id: packages
    homepage: https://upliftci.dev
    description: "Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
    maintainer: Gemba Advantage <github@gembaadvantage.com>
    license: MIT
    vendor: Gemba Advantage
    bindir: /usr/bin
    section: utils
    contents:
      - src: ./completions/uplift.bash
        dst: /usr/share/bash-completion/completions/uplift
        file_info:
          mode: 0644
      - src: ./completions/uplift.fish
        dst: /usr/share/fish/completions/uplift.fish
        file_info:
          mode: 0644
      - src: ./completions/uplift.zsh
        dst: /usr/share/zsh/vendor-completions/_uplift
        file_info:
          mode: 0644
      - src: ./LICENSE
        dst: /usr/share/doc/uplift/copyright
        file_info:
          mode: 0644
      - src: ./manpages/uplift.1.gz
        dst: /usr/share/man/man1/uplift.1.gz
        file_info:
          mode: 0644
    formats:
      - apk
      - deb
      - rpm
    dependencies:
      - git
    deb:
      lintian_overrides:
        - statically-linked-binary
        - changelog-file-missing-in-native-package

publishers:
  - name: fury.io
    ids:
      - packages
    env:
      - "FURY_TOKEN={{ .Env.FURY_TOKEN }}"
    cmd: ./scripts/fury-upload.sh {{ .ArtifactName }}

aurs:
  - homepage: https://upliftci.dev
    description: "Semantic versioning the easy way. Powered by Conventional Commits. Built for use with CI"
    maintainers:
      - "Paul T <paul dot t at gembaadvantage dot com>"
    license: MIT
    private_key: "{{ .Env.AUR_KEY }}"
    git_url: "ssh://aur@aur.archlinux.org/uplift-bin.git"
    package: |-
      # bin
      install -Dm755 "./uplift" "${pkgdir}/usr/bin/uplift"

      # license
      install -Dm644 "./LICENSE.md" "${pkgdir}/usr/share/licenses/uplift/LICENSE"

      # completions
      mkdir -p "${pkgdir}/usr/share/bash-completion/completions/"
      mkdir -p "${pkgdir}/usr/share/zsh/site-functions/"
      mkdir -p "${pkgdir}/usr/share/fish/vendor_completions.d/"
      install -Dm644 "./completions/uplift.bash" "${pkgdir}/usr/share/bash-completion/completions/uplift"
      install -Dm644 "./completions/uplift.zsh" "${pkgdir}/usr/share/zsh/site-functions/_uplift"
      install -Dm644 "./completions/uplift.fish" "${pkgdir}/usr/share/fish/vendor_completions.d/uplift.fish"

      # manpages
      install -Dm644 "./manpages/uplift.1.gz" "${pkgdir}/usr/share/man/man1/uplift.1.gz"

announce:
  skip: "{{gt .Patch 0}}"

  slack:
    enabled: false
    message_template: "Uplift {{ .Tag }} has been released. Find out details here: https://github.com/gembaadvantage/uplift/releases/tag/{{ .Tag }}"
    channel: "#topic-uplift-github"
    username: "Uplift"

release:
  footer: |
    **Full Changelog**: https://github.com/gembaadvantage/uplift/compare/{{ .PreviousTag }}...{{ .Tag }}

    ## What to do next?

    - Read the [documentation](https://upliftci.dev)
